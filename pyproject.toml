[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kbunified"
dynamic = ["version"]
description = 'KBUnified'
readme = "README.md"
requires-python = ">=3.12"
license = "GPL-3.0+"
keywords = []
authors = [
  { name = "Martin Raspaud", email = "martin.raspaud@smhi.se" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[project.urls]
Documentation = "https://github.com/maspaud/kbunified#readme"
Issues = "https://github.com/mraspaud/kbunified/issues"
Source = "https://github.com/mraspaud/kbunified"

[tool.hatch.version]
path = "src/kbunified/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/kbunified tests}"

[tool.coverage.run]
source_pkgs = ["kbunified", "tests"]
branch = true
parallel = true
omit = [
  "src/kbunified/__about__.py",
]

[tool.coverage.paths]
kbunified = ["src/kbunified", "*/kbunified/src/kbunified"]
tests = ["tests", "*/kbunified/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
kbunified = { path = ".", editable = true }

[tool.pixi.tasks]

[tool.pixi.dependencies]
python = "3.13.*"

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-asyncio = "*"

[tool.pixi.environments]
default = { solve-group = "default" }
test = { features = ["test"], solve-group = "default" }

[tool.ruff]
line-length = 120

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/
select = ["A", "B", "D", "E", "W", "F", "I", "N", "PT", "S", "TID", "C90", "Q", "T10", "T20"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # assert allowed in tests

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 10
